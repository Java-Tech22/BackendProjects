package com.spring.security.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.spring.security.config.AuthenticationService;
import com.spring.security.dto.JwtAuthenticationResponse;
import com.spring.security.dto.SignInRequest;
import com.spring.security.dto.SignUpRequest;
import com.spring.security.entity.User;
import com.spring.security.service.JwtServiceImpl;
import com.spring.security.service.UserServiceImpl;

@RestController
public class LoginController {

	@Autowired
	AuthenticationService authenticationService;
	
	
	AuthenticationManager authenticationManager;
	
	
	UserServiceImpl userService;
	
	JwtServiceImpl jwtServiceImpl;
	
	@PostMapping("/signUp")   
	 public ResponseEntity<User> signUp(@RequestBody SignUpRequest request){
	         return ResponseEntity.ok(authenticationService.signUp(request));	   
	}
	
	@PostMapping("/login")   
	 public ResponseEntity<JwtAuthenticationResponse> login(@RequestBody SignInRequest request){
	         //return ResponseEntity.ok(authenticationService.login(request));
		
		 try {
             authenticationManager.authenticate(
                     new UsernamePasswordAuthenticationToken(new SignUpRequest().getEmail(), new SignUpRequest().getPassword())
             );
       }catch (Exception e){
              throw  new Exception("Incorrect username or password", e);
       }

       final UserDetails userDetails = userService.loadUserByUsername(signInRequest.getUsername());
       final  String jwt = jwtServiceImpl.generateToken(userDetails);

    return new ResponseEntity<>(new JwtAuthenticationResponse(jwt), HttpStatus.ACCEPTED);
	}
	
}
